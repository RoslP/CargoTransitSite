<?php



function modInverse($e, $phi)
{
    $m0 = $phi;
    $x0 = 0;
    $x1 = 1;
    if ($phi == 1) {
        return 0;
    }
    while ($e > 1) {
        // q - результат целочисленного деления $e  на $phi
        $q = (int)($e / $phi);
        $t = $phi;

        // $phi - остаток от деления $e на $phi
        $phi = $e % $phi;
        $e = $t;
        $t = $x0;

        // x0 = x1 - q * x0
        $x0 = $x1 - $q * $x0;
        $x1 = $t;
    }
    // Обрабатываем отрицательные значения
    if ($x1 < 0) {
        $x1 += $m0;
    }
    return $x1;
}

$p = 79;
$q = 167;
// Вычисляем модуль n
$n = $p * $q;
// Вычисляем функцию Эйлера от n
$phi = ($p - 1) * ($q - 1);
$e = 65537;
// Находим закрытый ключ
$d = modInverse($e, $phi);
echo "Открытый ключ (e, n): (" . $e . ", " . $n . ")<br>";
echo "Закрытый ключ (d, n): (" . $d .", ". $n . ")<br>";
echo "phi(n): " . $phi . "<br>";

